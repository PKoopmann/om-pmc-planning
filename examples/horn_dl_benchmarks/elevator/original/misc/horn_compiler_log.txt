Compilation...
Collecting queries... 0.0003s
Rewriting... #logback.classic pattern: %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
09:29:40.078 [main] DEBUG o.s.c.h.q.HornSHIQQueryRewriter - rewrite(CQGraph g)
09:29:40.080 [main] DEBUG o.s.c.h.q.HornSHIQQueryRewriter - g = { X1[2], X0[], <X1, X0>[4] }
09:29:40.081 [main] DEBUG o.s.c.h.q.HornSHIQQueryRewriter - rewrite_recursive(CQGraph g)
09:29:40.081 [main] DEBUG o.s.c.h.q.HornSHIQQueryRewriter - g = { X1[2], X0[], <X1, X0>[4] }
09:29:40.083 [main] DEBUG o.s.c.h.q.HornSHIQQueryRewriter - cq(g) = QUERY0(X0,X1) :- r4(X1,X0), c2(X1).
0.6259s
Generating derived predicated from datalog rules... 0.0014s
Finalizing PDDL... 0.0004s
Compilation took 0.6282s

%% ONTOLOGY
floor(X0) :- destin(Y0,X0).
floor(X0) :- liftat(X0).
floor(X0) :- origin(Y0,X0).
inconsistent() :- floor(Y0), passenger(Y0).
inconsistent() :- next(Y0,Y1), next(Y0,Y2), Y1!=Y2.
passenger(X0) :- boarded(X0).
passenger(X0) :- destin(X0,Y0).
passenger(X0) :- origin(X0,Y0).
passenger(X0) :- served(X0).

%% QUERY0(?0,?1) <- boarded(?1), destin(?1,?0)
QUERY0(X0,X1) :- boarded(X1), destin(X1,X0).

%% CONCEPTS/RELATIONS NOT DERIVABLE FROM ONTOLOGY:
% boarded
% destin
% liftat
% next
% origin
% served

%% Tseitin transformation for PDDL using derived predicates

%% MERGED DERIVED PREDICATES:
% (:derived (DATALOG_FLOOR ?x0 - object)
          (or (exists (?y0 - object) (destin ?y0 ?x0)) (exists (?y0 - object) (origin ?y0 ?x0)) (floor ?x0) (liftat ?x0)))
% (:derived (DATALOG_INCONSISTENT)
          (or (exists (?y0 ?y1 ?y2 - object) (AUX0 ?y1 ?y2 ?y0)) (exists (?y0 - object) (AUX1 ?y0))))
% (:derived (DATALOG_PASSENGER ?x0 - object)
          (or (exists (?y0 - object) (destin ?x0 ?y0)) (exists (?y0 - object) (origin ?x0 ?y0)) (boarded ?x0) (passenger ?x0) (served ?x0)))

%% NEW DERIVED PREDICATES:
% (:derived (AUX0 ?y1 - object ?y2 - object ?y0 - object)
          (and (next ?y0 ?y1) (next ?y0 ?y2) (not (= ?y1 ?y2))))
% (:derived (AUX1 ?y0 - object)
          (and (DATALOG_FLOOR ?y0) (DATALOG_PASSENGER ?y0)))
% (:derived (AUX2 ?x - object)
          (or (served ?x) (not (DATALOG_PASSENGER ?x))))

